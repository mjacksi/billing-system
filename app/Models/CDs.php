<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Relations\Pivot;
use Illuminate\Database\Eloquent\Model;


class CDs/*creditor_debtor*/
    extends Model
{
    protected $table = 'creditor_debtor';
    protected $guarded = [];

//creditor_debtor Types
    public const CREDITOR = 1;//ديوني عند الناس
    public const DEBTOR = 2;//الديون المطلوبة دفعها للناس

    protected static function boot()
    {
        parent::boot(); //  Change the autogenerated stub
        static::addGlobalScope('orderedBy', function (Builder $builder) {
            $builder->orderBy('ordered');
        });

        if (!request()->is('manager/bills') && !request()->is('manager/bills/*')) {
            static::addGlobalScope('notDraft', function (Builder $builder) {
                $builder->where('draft', false);
            });
        }

    }

    public function user()
    {
        return $this->belongsTo(User::class, 'user_id', 'id');
    }

    public function manager()
    {
        return $this->belongsTo(Manager::class, 'manager_id', 'id');
    }

    public function payments()
    {
        return $this->hasMany(Payment::class, 'creditor_debtor_id', 'id');
    }


//    attributes
    public function getPaidAmountAttribute()
    {
        return Payment::query()->cds()->where('creditor_debtor_id', $this->id)->sum('amount');
    }

    public function getStatusNameAttribute()
    {

        $paidAmount = (double)$this->paid_amount;
//        if ($this->uuid == '2020122'){
//            dd($paidAmount);
//        }
//        dd($paidAmount);
        if ($paidAmount == $this->amount) {
            return t('Paid');
        } elseif ($paidAmount == 0) {
            return t('Not Paid');
        } elseif ($paidAmount < $this->amount) {
            return t('Partially');
        } else {
            return t('Not Paid');

        }
    }
    public function getTypeNameAttribute()
    {
        switch ($this->type) {
            case self::CREDITOR:
                return t('Creditor');
            case self::DEBTOR:
                return t('Debtor');
            default:
                return t('Un known status');
        }
    }

    public function getActionButtonsAttribute()
    {
        $button = '';
        $route = '';
        if (auth()->guard('manager')->check()) {
            if (request()->is('manager/cds2*')) {
                $route = 'cds2';
            } else {
                $route = 'cds';

            }
            $button .= '<a href="' . route('manager.' . $route . '.edit', $this->id) . '" class="btn btn-icon btn-danger "><i class="la la-pencil"></i></a> ';
//        $button .= '<a href="' . route('manager.' . $route . '.show', $this->id) . '" class="btn btn-icon btn-danger "><i class="la la-eye"></i></a> ';
            $button .= '<button type="button" data-id="' . $this->id . '" data-toggle="modal" data-target="#addPaymentModel"
 class="addPaymentRecord btn btn-icon btn-danger mr-1"><i class="la la-dollar "></i></button>';
            $button .= '<button type="button" data-id="' . $this->id . '" data-toggle="modal" data-target="#deleteModel" class="deleteRecord btn btn-icon btn-danger"><i class="la la-trash"></i></button>';
        } else if (auth()->guard('accountant')->check()) {
            if (request()->is('accountant/cds2*')) {
                $route = 'cds2';
            } else {
                $route = 'cds';

            }
//            $button .= '<a href="' . route('manager.' . $route . '.edit', $this->id) . '" class="btn btn-icon btn-danger disabled "><i class="la la-pencil"></i></a> ';
            $button .= '<button  type="button" data-id="' . $this->id . '" data-toggle="modal" data-target="#addPaymentModel"
 class="addPaymentRecord btn btn-icon btn-danger mr-1"><i class="la la-dollar "></i></button>';
//            $button .= '<button disabled type="button" data-id="' . $this->id . '" data-toggle="modal" data-target="#deleteModel" class="deleteRecord btn btn-icon btn-danger"><i class="la la-trash"></i></button>';
        } else if (auth()->guard('client')->check()) {
//            $button .= '<a href="' . route('manager.' . $route . '.edit', $this->id) . '" class="btn btn-icon btn-danger disabled "><i class="la la-pencil"></i></a> ';
//            $button .= '<button disabled type="button" data-id="' . $this->id . '" data-toggle="modal" data-target="#deleteModel" class="deleteRecord btn btn-icon btn-danger"><i class="la la-trash"></i></button>';
        }


        return $button;
    }

}
